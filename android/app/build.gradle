plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file('local.properties')))

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '1').toInteger()
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0.0')
def flutterMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion', '23').toInteger()
def flutterCompileSdkVersion = localProperties.getProperty('flutter.compileSdk', '35').toInteger()

android {
    namespace = 'com.padma.yoglog'
    compileSdk = flutterCompileSdkVersion
    ndkVersion = localProperties.getProperty('flutter.ndkVersion', '21.4.7075529')

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    defaultConfig {
        applicationId = 'com.padma.yoglog'
        minSdk = flutterMinSdkVersion
        targetSdk = flutterCompileSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // Remove the signingConfigs section
    signingConfigs {
        // Remove or comment out this section to disable signing
        // release {
        //     def keystoreProperties = new Properties()
        //     def keystorePropertiesFile = rootProject.file('key.properties')

        //     if (keystorePropertiesFile.exists()) {
        //         keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        //         println "Using keystore from key.properties"
        //     } else {
        //         println "key.properties not found. Using environment variables."
        //         keystoreProperties['keyAlias'] = System.getenv("KEY_ALIAS")
        //         keystoreProperties['keyPassword'] = System.getenv("KEY_PASSWORD")
        //         keystoreProperties['storePassword'] = System.getenv("STORE_PASSWORD")
        //         keystoreProperties['storeFile'] = "key_store_file.jks"
        //     }

        //     def keystoreFilePath = file("${System.getenv('KEYSTORE_FOLDER')}/${keystoreProperties['storeFile']}")

        //     keyAlias keystoreProperties['keyAlias']
        //     keyPassword keystoreProperties['keyPassword']
        //     storeFile keystoreFilePath
        //     storePassword keystoreProperties['storePassword']
        // }
    }

    // Modify buildTypes to not include signingConfig
    buildTypes {
        release {
            // Removed signingConfig section to not sign the release build
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'com.google.android.play:review:2.0.1'
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation("com.google.android.play:app-update-ktx:2.1.0")
}

flutter {
    source = '../..'
}
